{"version":3,"sources":["components/AddButton/AddButton.js","firebase.js","redux/todoSlice.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/CompletedList/CompletedList.js","components/Tabs/Tabs.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["AddButton","props","className","onClick","addNewItem","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getTodos","createAsyncThunk","todos","a","ref","firestore","collection","promise","get","then","item","docs","map","doc","data","todosList","console","log","addTodos","id","set","catch","err","toggleTodoItem","update","completed","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","todo","uuidv4","title","payload","push","toggleComplete","index","findIndex","extraReducers","pending","fulfilled","actions","TodoItem","dispatch","useDispatch","type","checked","TodoList","useState","value","setValue","useEffect","onSnapshot","querySnapshot","updatedState","forEach","newItem","onSubmit","event","preventDefault","resetItemField","placeholder","onChange","target","CompletedList","Tabs","content","activeTab","setActiveTab","buttons","Children","children","child","label","changeTab","tab","TabButton","button","Tab","App","setNewItem","useSelector","len","length","shallowEqual","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f1ea41b9.chunk.js","sourcesContent":["import React from 'react';\nimport './AddButton.scss';\n\nconst AddButton = (props) => {\n    return (\n        <button className=\"circled-plus-btn\" onClick={props.addNewItem}>\n            <i className=\"plus fa fa-plus\"></i>\n        </button>\n    )\n}\n\nexport default AddButton;","import firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBbXopct4zzunD7Y9YtZAlVXK6r-oMwwe4\",\n    authDomain: \"todo-f31e4.firebaseapp.com\",\n    projectId: \"todo-f31e4\",\n    storageBucket: \"todo-f31e4.appspot.com\",\n    messagingSenderId: \"386404027215\",\n    appId: \"1:386404027215:web:9a8c1ccb8c2c0fbcb9933a\",\n    measurementId: \"G-08S72LJYNP\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { v4 as uuidv4} from 'uuid';\nimport firebase from '../firebase';\nimport 'firebase/firestore';\n\nexport const getTodos = createAsyncThunk('firebase/getTodos', async (todos) => {\n    const ref = firebase.firestore().collection(\"todos\");\n\n   const promise = ref.get().then((item) => {\n        const todos = item.docs.map((doc) => {\n            return doc.data();\n        })\n        return todos;\n    });\n\n    if(promise) {\n        const todosList = await promise;\n        console.log('todosList',todosList);\n        return todosList;\n    }\n\n\n});\n\nexport const addTodos = createAsyncThunk('firebase/addTodos', async (todos) => {\n    const ref = firebase.firestore().collection(\"todos\");\n    const promise = ref.doc(todos.id).set(todos)\n    .then(() => {\n    console.log(\"Item Added Successfully!\");\n    })\n   .catch((err) => {\n       console.log(err);\n   })\n});\n\nexport const toggleTodoItem = createAsyncThunk('firebase/toggleTodoItem', async (todos) => {\n    const ref = firebase.firestore().collection(\"todos\");\n    const promise = ref.doc(todos.id).update({completed: todos.completed})\n    .then(() => {\n    console.log(\"Item toggleed Successfully!\");\n    })\n   .catch((err) => {\n       console.log(err);\n   })\n});\n\nexport const todoSlice = createSlice({\n    name:'todo',\n    initialState:[],\n    reducers:{\n        addTodo: (state, action) => {\n            const todo = {\n                id: uuidv4(),\n                title: action.payload.title,\n                completed: false\n            };\n            console.log(\"dispatch addTodo Hitttt\", todo);\n            state.push(todo);\n            console.log(\"dispatch addTodo After Hitttt\", state);\n        },\n        toggleComplete: (state, action) => {\n            console.log('toggleComplete-------------', state);\n            const index = state.findIndex((todo) => todo.id === action.payload.id);\n            console.log('index--------------',index);\n            // state[index].completed = action.payload.completed;\n        }\n    },\n    extraReducers: {\n        [getTodos.pending] : (state,action) => {\n            console.log('extraReducers getTodos Pending Hit');\n        },\n        [getTodos.fulfilled] : (state,action) => {\n            console.log('extraReducers getTodos Fulfilled Hit', action.payload);\n            state.push(action.payload)\n        },\n        [addTodos.fulfilled] : (state, action) => {\n            console.log('extraReducers addTodos fulfilled Hit');\n        }\n    }\n});\n\nexport const { addTodo, toggleComplete } = todoSlice.actions;\n\nexport default todoSlice.reducer;","import React from 'react';\nimport { useDispatch  } from 'react-redux';\nimport { toggleTodoItem } from '../../redux/todoSlice';\nimport './TodoItem.scss';\n\nconst TodoItem = (props) => {\n    const dispatch = useDispatch();\n    const handleCheckboxClick = () => {\n        dispatch(toggleTodoItem({\n            id: props.id,\n            completed: !props.completed\n        }))\n    }\n\n    return (\n        <li className={`list-item ${props.completed ? 'strike' : ''}`} key={props.id}>\n            <input type=\"checkbox\" className={`input-checkbox ${props.completed ? 'active' : ''}`} onClick={handleCheckboxClick} checked={props.completed}/>\n            {props.title}\n        </li>\n    )\n}\n\nexport default TodoItem;","import React, { useState, useEffect } from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { addTodos, getTodos } from '../../redux/todoSlice';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4} from 'uuid';\nimport firebase from '../../firebase';\nimport 'firebase/firestore';\nimport './TodoList.scss';\n\nconst TodoList = (props) => {\n    const [value, setValue] = useState('');\n    const dispatch = useDispatch();\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if(value){\n            dispatch(\n                addTodos({\n                    id:uuidv4(),\n                    title: value,\n                    completed: false\n                })\n            )\n            props.resetItemField();\n            setValue('');\n        }\n    }\n\n    useEffect(()=> {\n        const ref = firebase.firestore().collection(\"todos\");\n            ref.onSnapshot((querySnapshot) => {\n                console.log(\"onSnapshot Hit\");\n                const updatedState = [];\n                querySnapshot.forEach((doc) => {\n                    updatedState.push(doc.data());\n                });\n                console.log('onSnapshot updatedState ------ ',updatedState);\n                dispatch(getTodos());\n            });\n\n        dispatch(getTodos());\n    }, [dispatch]);\n\n    return (\n        <div>\n        <ul className=\"list-group\">\n            { props.todos ?\n            \n            props.todos.map((todo) => {\n                return <TodoItem id={todo.id} title={todo.title} completed={todo.completed}/>\n            }) : ''\n            \n            }\n            { props.newItem ? \n            <form onSubmit={onSubmit}>\n                <input \n                type=\"text\" \n                placeholder=\"Add Todo..\" \n                value={value} \n                onChange={(event) => setValue(event.target.value)}/>\n                <button type=\"submit\"> OK</button>\n            </form> : ''\n            }\n        </ul>\n        </div>\n    )\n}\n\nexport default TodoList;","import React from 'react';\n\nconst CompletedList = (props) => {\nconst completedList = [];\n    return (\n        <ul>\n            <span>Completed List Items</span>\n            { props.todos ? \n                props.todos.map((todo) => {\n                if(todo.completed) {\n                    return <li key={todo.id}>{todo.title}</li>\n                }\n            }): ''\n        }\n        </ul>\n    )\n}\n\nexport default CompletedList;","import React, { Fragment, useState, Children } from 'react';\nimport './Tabs.scss';\n\nconst Tabs = (props) => {\n\n    const [activeTab, setActiveTab] = useState(\"todo-list\");\n\n    let buttons = [];\n    let content;\n\n    const changeTab = (tab) => {\n        setActiveTab(tab);\n    }\n\n    return (\n        <div className=\"tabs-container\">\n            {Children.map(props.children, (child) => {\n                buttons.push(child.props.label)\n                if(child.props.label === activeTab) content=child.props.children\n            })}\n            <TabButton buttons={buttons} activeTab={activeTab} changeTab={changeTab} />\n            {content}\n        </div>\n    )\n}\n\nconst TabButton = (props) => {\n    return(\n        <div className=\"tab-btn-wrapper\">\n            {props.buttons.map((button) => {\n                return (\n                <button className={button===props.activeTab ? \"active\" : \"\"} onClick={() => props.changeTab(button)}>\n                    <i className={button}></i>\n                </button>\n                )\n            })}\n        </div>\n    )\n}\n\nconst Tab = (props) => {\n    return(\n        <Fragment>\n            {props.children}\n        </Fragment>\n    )\n}\n\nexport { Tabs, Tab, TabButton };","import './App.scss';\nimport AddButton from './components/AddButton/AddButton';\nimport TodoList from './components/TodoList/TodoList';\nimport CompletedList from './components/CompletedList/CompletedList';\nimport {Tabs, Tab} from './components/Tabs/Tabs';\nimport { useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst App = () => {\n  const [newItem, setNewItem] = useState(false);\n  const addNewItem = () => {\n    setNewItem(true);\n  };\n\n  const resetAddNewItemField = () => {\n    setNewItem(false);\n  }\n\n  const todos = useSelector((state) => {\n    console.log(\"useSelectoruseSelector\");\n    const len = state.todos.length;\n    const todoValues = state.todos[len - 1];\n    return todoValues;\n  }, shallowEqual);\n\n  return(\n    <div>\n      <h1>My Todo List</h1>\n      <AddButton addNewItem={addNewItem}/>\n      <Tabs>\n        <Tab label=\"todo-list\">\n          <TodoList newItem={newItem} resetItemField={resetAddNewItemField} todos={todos}/>\n        </Tab>\n        <Tab label=\"completed-list\">\n          <CompletedList todos={todos}/>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\n\nexport default configureStore({\n    reducer: {\n        todos: todoReducer\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css'; \nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}